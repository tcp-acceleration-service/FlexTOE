#
# Copyright (C) 2015-2018,  Netronome Systems, Inc.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# @file         apps/wire/Makefile
# @brief        Makefile for the ME cut-through wire app
#

# Configuration
NFP_SDK_DIR ?= /opt/netronome
NFP_STD_LIB ?= $(NFP_SDK_DIR)/components/standardlibrary
PICO_CODE   ?= $(NFP_STD_LIB)/picocode/nfp6000/catamaran/catamaran.npfw
Q ?= @

NFAS ?= $(NFP_SDK_DIR)/bin/nfas
NFCC ?= $(NFP_SDK_DIR)/bin/nfcc
NFLD ?= $(NFP_SDK_DIR)/bin/nfld

CHIP ?= nfp-4xxx-b0

# Default nfas flags
#  -t    => terse output
#  -W3   => warning level 3
#  -R    => require register declarations
#  -lm 0 => define start of local memory allocation to be byte 0
#  -C    => enable case sensitivity
#  -chip => build for the specified CHIP
NFASFLAGS ?= -t -W3 -R -lm 0 -C -chip $(CHIP) -include config.h

NFLDFLAGS ?= -chip $(CHIP)

# Default nfas flags
#  -W3         => warning level 3
#  -Gx6000     => specify NFP-6xxx target architecture, add -D__NFP_IS_6000
#  -Qspill=7   => No spill
#  -Qnn_mode=1 => next neighbor registers are self accessible (not neighbor accessible)
#  -Qno_decl_volatile  => make all C declarations nonvolatile unless explicitly specified to be volatile
#  -single_dram_signal => use standard approach of bulk memory transactions use a single signal
NFCCFLAGS ?= -O2 -W3 -chip $(CHIP) -Qspill=7 -Qnn_mode=1 \
	-Qno_decl_volatile -single_dram_signal \
	-Qnctx_mode=8 -FI config.h

FW_BUILD     := $(app_src_dir)
FW_FW        := $(app_src_dir)
FIRMWARE_DIR := $(flowenv_dir)
NFCC_BASE_INC := -I$(app_src_dir) -I$(flowenv_dir)/include -I$(flowenv_dir)/lib -I$(ROOT_SRC_DIR) -I$(ROOT_SRC_DIR)/include
NFAS_BASE_FLAGS := $(NFASFLAGS)
NFLD_BASE_FLAGS := $(NFLDFLAGS)
NFAS_BASE_INC := -I$(app_src_dir) -I$(microc_blocks_dir) -I$(microc_libs_dir) -I$(microc_inc_dir) -I$(NFP_STD_LIB)/microcode/src \
								-I$(NFP_STD_LIB)/include -I$(ROOT_SRC_DIR) -I$(ROOT_SRC_DIR)/include

